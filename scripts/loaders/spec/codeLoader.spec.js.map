{"version":3,"sources":["scripts/loaders/spec/codeLoader.spec.js"],"names":["describe","loader","beforeEach","CodeLoader","it","context","editor","code","main","getProjectName","expect","getFiles","toEqual","content","name","setProjectName","sinon","spy","callback","setCode","runCode","onRunCode","_readText","stub","callsArgWith","read","calledWith","toBeTruthy","called"],"mappings":";;AAAAA,SAAS,YAAT,EAAuB,YAAW;AAChC,MAAIC,MAAJ;;AAEAC,aAAW,YAAW;AACpBD,aAAS,IAAIE,UAAJ,EAAT;AACD,GAFD;;AAIAC,KAAG,gCAAH,EAAqC,YAAW;AAC9C,QAAIC,UAAU;AACZC,cAAQ;AACNC,cAAM;AACJC,gBAAM;AADF;AADA,OADI;AAMZC,sBAAgB,0BAAW;AAAE,eAAO,QAAP;AAAiB;AANlC,KAAd;;AASAC,WAAOT,OAAOU,QAAP,CAAgBN,OAAhB,CAAP,EAAiCO,OAAjC,CAAyC,CAAC;AACxCC,eAAS,eAD+B;AAExCC,YAAM;AAFkC,KAAD,CAAzC;AAID,GAdD;;AAgBAV,KAAG,6EAAH,EAAkF,YAAW;AAC3F,QAAIW,iBAAiBC,MAAMC,GAAN,EAArB;AACA,QAAIC,WAAWF,MAAMC,GAAN,EAAf;AACA,QAAIE,UAAUH,MAAMC,GAAN,EAAd;AACA,QAAIG,UAAUJ,MAAMC,GAAN,EAAd;;AAEA,QAAIZ,UAAU;AACZC,cAAQ;AACNa,iBAASA,OADH;AAENE,mBAAWD;AAFL,OADI;AAKZL,sBAAgBA;AALJ,KAAd;;AAQAd,WAAOqB,SAAP,GAAmBN,MAAMO,IAAN,GAAaC,YAAb,CAA0B,CAA1B,EAA6B,UAA7B,EAAyC,WAAzC,CAAnB;AACAvB,WAAOwB,IAAP,CAAYpB,OAAZ,EAAqB,IAArB,EAA2Ba,QAA3B;;AAEAR,WAAOK,eAAeW,UAAf,CAA0B,WAA1B,CAAP,EAA+CC,UAA/C;AACAjB,WAAOQ,SAASU,MAAhB,EAAwBD,UAAxB;AACAjB,WAAOS,QAAQO,UAAR,CAAmB,UAAnB,CAAP,EAAuCC,UAAvC;AACAjB,WAAOU,QAAQQ,MAAf,EAAuBD,UAAvB;AACD,GArBD;AAuBD,CA9CD","file":"codeLoader.spec.js","sourcesContent":["describe('CodeLoader', function() {\n  var loader;\n\n  beforeEach(function() {\n    loader = new CodeLoader();\n  })\n\n  it(\"can retrieve the file to store\", function() {\n    var context = {\n      editor: {\n        code: {\n          main: \"The main code\"\n        }\n      },\n      getProjectName: function() { return \"sarasa\" }\n    };\n\n    expect(loader.getFiles(context)).toEqual([{\n      content: \"The main code\",\n      name: \"sarasa.code.gbs\"\n    }]);\n  });\n\n  it(\"sets the project's name, runs the code and calls the callback after reading\", function() {\n    var setProjectName = sinon.spy();\n    var callback = sinon.spy();\n    var setCode = sinon.spy();\n    var runCode = sinon.spy();\n\n    var context = {\n      editor: {\n        setCode: setCode,\n        onRunCode: runCode\n      },\n      setProjectName: setProjectName\n    };\n\n    loader._readText = sinon.stub().callsArgWith(1, \"AContent\", \"AFileName\");\n    loader.read(context, null, callback);\n\n    expect(setProjectName.calledWith(\"AFileName\")).toBeTruthy();\n    expect(callback.called).toBeTruthy();\n    expect(setCode.calledWith(\"AContent\")).toBeTruthy();\n    expect(runCode.called).toBeTruthy();\n  });\n\n});\n"]}